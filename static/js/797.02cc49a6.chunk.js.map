{"version":3,"file":"static/js/797.02cc49a6.chunk.js","mappings":"+IACA,SAAgB,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,iBAAmB,kCAAkC,cAAgB,+BAA+B,MAAQ,uBAAuB,OAAS,yBCAzQ,EAAuB,yB,aCGvB,MAQA,EARoBA,IAEbC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACtBH,EAAAA,EAAAA,KAAA,QAAAG,SAAOJ,EAAMK,YCNzB,EAAuB,wBCWvB,EARmBL,IAEZC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACtBH,EAAAA,EAAAA,KAAA,QAAAG,SAAOJ,EAAMK,YCNzB,EAAuB,qBAAvB,EAA6F,qB,aCI7F,MAUA,EAVgBL,IACZ,IAAIM,EAAO,YAAYN,EAAMO,KAE7B,OACIN,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAWC,UACtBH,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,GAAIH,EAAMJ,UAAWC,EAAWC,SAAEJ,EAAMU,QAChD,E,aCJb,MAAMC,EAAeX,IAGbC,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACPC,cAAe,CAACC,WAAY,IAC5BC,SAAUC,IACNhB,EAAMiB,WAAWD,EAAOF,WAAW,EAEvCI,SAAUF,IACN,MAAMG,EAAS,CAAC,EAIhB,OAHKH,EAAOF,aACRK,EAAOL,WAAa,YAEjBK,CAAM,EACff,SAEDA,KACGgB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACnB,UAAWC,EAAMmB,cAAclB,SAAA,EACjCH,EAAAA,EAAAA,KAACsB,EAAAA,GAAK,CAACrB,UAAWC,EAAMqB,MAAOd,KAAM,aAAce,KAAK,OAAOC,YAAY,0GAC3EzB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAMwB,OAAQF,KAAK,SAAQrB,SAAC,gEA2C/D,EApCiBJ,IAGb,IAAI4B,EAAU5B,EAAM6B,aAAaC,YAAYC,KAAIC,IAAU/B,EAAAA,EAAAA,KAACgC,EAAM,CAACvB,KAAMsB,EAAOtB,KAAMH,GAAIyB,EAAOzB,IAASyB,EAAOzB,MAC7G2B,EAAWlC,EAAM6B,aAAaM,aAAaJ,KAAI1B,GACrCA,EAAQE,GAAG6B,WACXC,WAAW,SAAUpC,EAAAA,EAAAA,KAACqC,EAAU,CAACjC,QAASA,EAAQA,SAAcA,EAAQE,KAClDN,EAAAA,EAAAA,KAACsC,EAAS,CAAClC,QAASA,EAAQA,SAAcA,EAAQE,MAYtF,OACIa,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAMyB,QAAQxB,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAMqC,aAAapC,UAC/BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAMsC,KAAKrC,SACrBwB,OAGLR,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAMuC,iBAAiBtC,SAAA,EACnCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAM+B,SAAS9B,SAC1B8B,KAELjC,EAAAA,EAAAA,KAACU,EAAW,CAACM,WAAYjB,EAAMiB,kBAEjC,E,oBCpBd,SAAe0B,E,OAAAA,KACXC,EAAAA,EAAAA,KAfmBC,IACZ,CACHhB,aAAcgB,EAAMhB,iBAIFiB,IACf,CACH7B,WAAaH,IACTgC,GAASC,EAAAA,EAAAA,GAAyBjC,GAAY,MAOtDkC,EAAAA,EAFJ,CAGEC,E,sEC5CF,IAAIC,EAA8BL,IAAK,CACnCM,OAAQN,EAAMO,KAAKD,SAGhB,MAAMH,EAAoBK,IAE7B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAKC,KAAKzD,MAAMmD,QACTlD,EAAAA,EAAAA,KAACoD,EAAS,IAAKI,KAAKzD,SADIC,EAAAA,EAAAA,KAACyD,EAAAA,GAAQ,CAACjD,GAAG,WAEhD,EAKJ,OAFqCmC,EAAAA,EAAAA,IAAQM,EAARN,CAAoCU,EAEpC,C","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/MessageOut/MessageOut.module.css?a245","components/Dialogs/MessageOut/MessageOut.jsx","webpack://my-app/./src/components/Dialogs/MessageIn/MessageIn.module.css?ae83","components/Dialogs/MessageIn/MessageIn.jsx","webpack://my-app/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__5aWFL\",\"dialogs_list\":\"Dialogs_dialogs_list__g+2Js\",\"list\":\"Dialogs_list__vEmZR\",\"messages_wrapper\":\"Dialogs_messages_wrapper__hS7fB\",\"input_wrapper\":\"Dialogs_input_wrapper__AXfjA\",\"input\":\"Dialogs_input__dMmFg\",\"button\":\"Dialogs_button__W5H8Z\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MessageOut_item__CrK3y\"};","import React from 'react';\r\nimport style from './MessageOut.module.css';\r\n\r\n\r\nconst MessageOut = (props) => {\r\n    return (\r\n       <div className={style.item}>\r\n            <span>{props.message}</span>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default MessageOut;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MessageIn_item__C9d00\"};","import React from 'react';\r\nimport style from './MessageIn.module.css';\r\n\r\n\r\nconst MessageIn = (props) => {\r\n    return (\r\n       <div className={style.item}>\r\n            <span>{props.message}</span>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default MessageIn;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Dialog_item__1GLEB\",\"item_active\":\"Dialog_item_active__t+tY4\",\"link\":\"Dialog_link__e5QEr\"};","import React from 'react';\r\nimport style from './Dialog.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Dialog = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <li className={style.item}>\r\n            <NavLink to={path} className={style.link}>{props.name}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Dialog;\r\n","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport MessageOut from './MessageOut/MessageOut';\r\nimport MessageIn from './MessageIn/MessageIn';\r\nimport Dialog from './Dialog/Dialog';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nconst DialogsForm = (props) => {\r\n    // let newMessage = React.createRef();\r\n    return (\r\n        <Formik \r\n        initialValues={{newMessage: ''}}\r\n        onSubmit={values => {\r\n            props.addMessage(values.newMessage);\r\n        }}\r\n        validate={values => {\r\n            const errors = {};\r\n            if (!values.newMessage) {\r\n                errors.newMessage = 'Required';\r\n            }\r\n            return errors;\r\n        }}>\r\n\r\n        {() => (\r\n            <Form className={style.input_wrapper}>\r\n                <Field className={style.input} name={'newMessage'} type='text' placeholder='Введите сообщение...'></Field>\r\n                <button className={style.button} type='submit'>Отправить</button>\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    // console.log(props)\r\n\r\n    let dialogs = props.messagesPage.dialogsData.map(dialog => <Dialog name={dialog.name} id={dialog.id} key={dialog.id}/>)\r\n    let messages = props.messagesPage.messagesData.map(message => {\r\n        let id =  message.id.toString();\r\n        return id.startsWith('user') ? <MessageOut message={message.message} key={message.id}/> :\r\n                                        <MessageIn message={message.message} key={message.id}/>\r\n    })\r\n\r\n    // let onButtonClick = (values) => {\r\n    //     props.addMessage(values.newMessage);\r\n    // }\r\n\r\n    // let onInputChange = () => {\r\n    //     let text = newMessage.current.value;\r\n    //     props.updateNewMessageText(text);\r\n    // }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n        <div className={style.dialogs_list}>\r\n            <ul className={style.list}>\r\n                {dialogs}\r\n            </ul>\r\n        </div>\r\n            <div className={style.messages_wrapper}>\r\n                <div className={style.messages}>\r\n                    {messages}\r\n                </div>\r\n                <DialogsForm addMessage={props.addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { sendMessageActionCreator } from '../../redux/messagesReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedierct } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n// const DialogsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer> \r\n//             {\r\n//             (store) => {\r\n//                 let onButtonClick = () => {\r\n//                     store.dispatch(sendMessageActionCreator());\r\n//                 }\r\n\r\n//                 let onInputChange = (text) => {\r\n//                     store.dispatch(updateInputDialogsActionCreator(text))\r\n//                 }\r\n\r\n//                 return <Dialogs addMessage={onButtonClick}\r\n//                     updateNewMessageText={onInputChange}\r\n//                     messagesPage={store.getState().messagesPage} />\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n// let AuthRedirectComponent = withAuthRedierct(Dialogs);\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessage) => {\r\n            dispatch(sendMessageActionCreator(newMessage));\r\n        },\r\n        }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedierct\r\n)(Dialogs)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedierct = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login/' />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","_jsx","className","style","children","message","path","id","NavLink","to","name","DialogsForm","Formik","initialValues","newMessage","onSubmit","values","addMessage","validate","errors","_jsxs","Form","input_wrapper","Field","input","type","placeholder","button","dialogs","messagesPage","dialogsData","map","dialog","Dialog","messages","messagesData","toString","startsWith","MessageOut","MessageIn","dialogs_list","list","messages_wrapper","compose","connect","state","dispatch","sendMessageActionCreator","withAuthRedierct","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate"],"sourceRoot":""}