{"version":3,"file":"static/js/261.d471c5b7.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__wHWBr\",\"title\":\"MyPosts_title__MA3e0\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__5kQGr\",\"name\":\"Post_name__Wsyl3\",\"comment\":\"Post_comment__hq9Hd\",\"count\":\"Post_count__bzllY\",\"button\":\"Post_button__dHC4v\"};","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src={props.image}></img>\r\n            <div className={style.item_wrapper}>\r\n                <p className={style.name}>{props.name}</p>\r\n                <p className={style.comment}>{props.comment}</p>\r\n            </div>\r\n            <p className={style.count}>Comments: {props.likesCount}</p>\r\n            <button className={style.button} type='button'>Like!</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, Form, Formik } from 'formik';\r\n\r\nconst MyPostsForm = (props) => {\r\n    // console.log(props)\r\n    // let newPost = React.createRef();\r\n\r\n    return (\r\n        <Formik \r\n        initialValues={{newPostText: ''}}\r\n        onSubmit={values => {\r\n            props.addPost(values.newPostText);\r\n        }}\r\n        validate={values => {\r\n            const errors = {};\r\n            if (!values.newPostText) {\r\n                errors.newPostText = 'Required';\r\n            }\r\n            return errors;\r\n        }}>\r\n\r\n        {() => (\r\n            <Form>\r\n                <Field name={'newPostText'} type='text'></Field>\r\n                <button className={style.button} type='submit'>Add post</button>\r\n            </Form>\r\n        )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps !== this.props || nextState !== this.state;\r\n    // классовый метод\r\n    // }\r\n\r\n    let posts = props.posts.map(post => <Post name={post.name} comment={post.comment} likesCount={post.likesCount} image={post.image} key={post.id}/>)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={style.title}>My posts</h2>\r\n            <MyPostsForm addPost={props.addPost}/>\r\n            <div className={style.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ProfileInfo_wrapper__B4Gb1\",\"content__bg\":\"ProfileInfo_content__bg__Ufh6V\",\"fullName\":\"ProfileInfo_fullName__X+CbU\",\"aboutMe\":\"ProfileInfo_aboutMe__NXbSV\",\"list\":\"ProfileInfo_list__IB9OT\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusText\":\"ProfileStatus_statusText__fuZ2V\",\"statusInput\":\"ProfileStatus_statusInput__+E2yi\"};","import React from \"react\";\r\nimport style from './ProfileStatus.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (evt) => {\r\n        this.setState({\r\n            status: evt.currentTarget.value,\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <span className={style.statusText} onClick={this.activateEditMode}>{this.props.status || 'Hi all!'}</span>\r\n                }\r\n                {this.state.editMode &&\r\n                    <input className={style.statusInput} onChange={this.onStatusChange} value={this.state.status} onBlur={this.deactivateMode} autoFocus={true}></input>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let deactivateMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    let onStatusChange = (evt) => {\r\n        setStatus(evt.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <span className={style.statusText} onClick={activateEditMode}>{props.status || 'Hi all!'}</span>\r\n            }\r\n            {editMode &&\r\n                <input className={style.statusInput} onBlur={deactivateMode} onChange={onStatusChange} value={status} autoFocus={true}></input>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import style from './ProfileInfo.module.css';\r\nimport bg from '../../../img/gallery.jpg';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    // console.log(props)\r\n    if(!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <img className={style.content__bg} src={ props.profile.photos.large || bg }></img>\r\n            <div className={style.content}>\r\n                <h2 className={style.fullName}>{props.profile.fullName}</h2>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <p className={style.aboutMe}>{props.profile.aboutMe}</p>\r\n                <i>{props.profile.lookingForAJob ? 'В поисках работы...' : 'Работу не ищу'}</i>\r\n                <p>({props.profile.lookingForAJobDescription})</p>\r\n                <h4>My contacts:</h4>\r\n                <ul className={style.list}>\r\n                    <li className={`${style.item} ${style.itemGit}`}>{props.profile.contacts.github}</li>\r\n                    <li className={`${style.item} ${style.itemVK}`}>{props.profile.contacts.vk}</li>\r\n                    <li className={`${style.item} ${style.itemYoutube}`}>{props.profile.contacts.youtube}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// import style from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    // console.log(props)\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","// import style from './Profile.module.css';\r\nimport React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getStatus, updateStatus } from '../../redux/profileReducer';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { withAuthRedierct } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refresherProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount () {\r\n       this.refresherProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.refresherProfile();\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        return(\r\n            <Component {...props} router={{location, navigate, params}}/>\r\n        )\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus} ),\r\n    withRouter,\r\n    withAuthRedierct\r\n)(ProfileContainer)\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedierct = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login/' />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","_jsxs","className","style","item","children","_jsx","src","image","item_wrapper","name","comment","count","likesCount","button","type","MyPostsForm","Formik","initialValues","newPostText","onSubmit","values","addPost","validate","errors","Form","Field","React","posts","map","post","Post","id","title","connect","state","profilePage","postsData","dispatch","addPostActionCreator","MyPosts","editMode","setEditMode","useState","status","setStatus","useEffect","onClick","activateEditMode","onBlur","deactivateMode","updateStatus","onChange","evt","currentTarget","value","autoFocus","profile","wrapper","content__bg","photos","large","bg","content","fullName","ProfileStatusWithHooks","aboutMe","lookingForAJob","lookingForAJobDescription","list","itemGit","contacts","github","itemVK","vk","itemYoutube","youtube","Preloader","ProfileInfo","MyPostsContainer","ProfileContainer","refresherProfile","userId","this","router","params","authUserId","history","push","getProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","Profile","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedierct","mapStateToPropsForRedirect","RedirectComponent","Navigate","to"],"sourceRoot":""}